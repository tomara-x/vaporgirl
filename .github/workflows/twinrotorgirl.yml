name: twinrotorgirl

on:
  push:
    paths:
      - 'twinrotorgirl/**'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./twinrotorgirl/Builds/VisualStudio2019/twinrotorgirl.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: add msbuild to path
      uses: microsoft/setup-msbuild@v1.1

    - name: build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: ziptie..
      shell: bash
      run: 7z a -tzip twinrotorgirl.zip -r twinrotorgirl/Builds/VisualStudio2019/x64/Release

    - name: release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "twinrotorgirl"
        prerelease: false
        title: "twinrotorgirl"
        files: |
          twinrotorgirl/Builds/VisualStudio2019/x64/Release/VST3/twinrotorgirl.vst3
          twinrotorgirl.zip

    # don't need these now
    #- name: save artifact
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: twinrotorgirl-release
    #    path: twinrotorgirl\Builds\VisualStudio2019\x64\Release

